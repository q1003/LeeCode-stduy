/*
方法一：模拟，模拟二进制的求和方式，逢二进一。
方法二：这个只针对于java和python具有高精度的运算
*/


模拟代码实现：
class Solution {
    public String addBinary(String a, String b) {
    StringBuffer ans=new StringBuffer();
    int n=Math.max(a.length(),b.length());
    int carry=0;
    for (int i=0;i<n;i++){
        carry+=i<a.length()?a.charAt(a.length()-1-i)-'0':0;
        carry+=i<b.length()?b.charAt(b.length()-1-i)-'0':0;
        ans.append((char)(carry%2+'0'));
        carry/=2;
    }
    if(carry>0){
        ans.append('1');
    }
    ans.reverse();//实现字符串反转
    return ans.toString();
    }
}

方法二代码实现：
class Solution {
    public String addBinary(String a, String b) {
        return Integer.toBinaryString(
            Integer.parseInt(a, 2) + Integer.parseInt(b, 2)
        );
    }
}
